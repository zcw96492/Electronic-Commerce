<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcore.electronic.commerce.atom.persistence.generate.AccountBindingBankCardInfoMapper">
  <resultMap id="BaseResultMap" type="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfo">
    <id column="account_binding_bank_card_info_id" jdbcType="INTEGER" property="accountBindingBankCardInfoId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="bank_card_no" jdbcType="VARCHAR" property="bankCardNo" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="bank_card_register_user_name" jdbcType="VARCHAR" property="bankCardRegisterUserName" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="bank_card_type" jdbcType="INTEGER" property="bankCardType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account_binding_bank_card_info_id, user_id, bank_card_no, bank_name, balance, bank_card_register_user_name, 
    mobile_phone, bank_card_type, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ACCOUNT_BINDING_BANK_CARD_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ACCOUNT_BINDING_BANK_CARD_INFO
    where account_binding_bank_card_info_id = #{accountBindingBankCardInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ACCOUNT_BINDING_BANK_CARD_INFO
    where account_binding_bank_card_info_id = #{accountBindingBankCardInfoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfoExample">
    delete from ACCOUNT_BINDING_BANK_CARD_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfo">
    insert into ACCOUNT_BINDING_BANK_CARD_INFO (account_binding_bank_card_info_id, user_id, 
      bank_card_no, bank_name, balance, 
      bank_card_register_user_name, mobile_phone, 
      bank_card_type, create_time, update_time
      )
    values (#{accountBindingBankCardInfoId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{bankCardNo,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, 
      #{bankCardRegisterUserName,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, 
      #{bankCardType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfo">
    insert into ACCOUNT_BINDING_BANK_CARD_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountBindingBankCardInfoId != null">
        account_binding_bank_card_info_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bankCardNo != null">
        bank_card_no,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="bankCardRegisterUserName != null">
        bank_card_register_user_name,
      </if>
      <if test="mobilePhone != null">
        mobile_phone,
      </if>
      <if test="bankCardType != null">
        bank_card_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountBindingBankCardInfoId != null">
        #{accountBindingBankCardInfoId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankCardNo != null">
        #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="bankCardRegisterUserName != null">
        #{bankCardRegisterUserName,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="bankCardType != null">
        #{bankCardType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfoExample" resultType="java.lang.Integer">
    select count(*) from ACCOUNT_BINDING_BANK_CARD_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ACCOUNT_BINDING_BANK_CARD_INFO
    <set>
      <if test="record.accountBindingBankCardInfoId != null">
        account_binding_bank_card_info_id = #{record.accountBindingBankCardInfoId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bankCardNo != null">
        bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.bankCardRegisterUserName != null">
        bank_card_register_user_name = #{record.bankCardRegisterUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePhone != null">
        mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardType != null">
        bank_card_type = #{record.bankCardType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ACCOUNT_BINDING_BANK_CARD_INFO
    set account_binding_bank_card_info_id = #{record.accountBindingBankCardInfoId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      bank_card_no = #{record.bankCardNo,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=DECIMAL},
      bank_card_register_user_name = #{record.bankCardRegisterUserName,jdbcType=VARCHAR},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      bank_card_type = #{record.bankCardType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfo">
    update ACCOUNT_BINDING_BANK_CARD_INFO
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankCardNo != null">
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="bankCardRegisterUserName != null">
        bank_card_register_user_name = #{bankCardRegisterUserName,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="bankCardType != null">
        bank_card_type = #{bankCardType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where account_binding_bank_card_info_id = #{accountBindingBankCardInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newcore.electronic.commerce.base.model.generate.AccountBindingBankCardInfo">
    update ACCOUNT_BINDING_BANK_CARD_INFO
    set user_id = #{userId,jdbcType=INTEGER},
      bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      bank_card_register_user_name = #{bankCardRegisterUserName,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      bank_card_type = #{bankCardType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where account_binding_bank_card_info_id = #{accountBindingBankCardInfoId,jdbcType=INTEGER}
  </update>
</mapper>