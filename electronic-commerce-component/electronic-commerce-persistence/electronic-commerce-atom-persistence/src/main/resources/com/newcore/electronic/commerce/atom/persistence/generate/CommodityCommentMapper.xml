<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcore.electronic.commerce.atom.persistence.generate.CommodityCommentMapper">
  <resultMap id="BaseResultMap" type="com.newcore.electronic.commerce.base.model.generate.CommodityComment">
    <id column="commodity_comment_id" jdbcType="INTEGER" property="commodityCommentId" />
    <result column="commodity_id" jdbcType="INTEGER" property="commodityId" />
    <result column="comment_type" jdbcType="INTEGER" property="commentType" />
    <result column="comment_description" jdbcType="VARCHAR" property="commentDescription" />
    <result column="additional_evaluation" jdbcType="VARCHAR" property="additionalEvaluation" />
    <result column="comment_pic_url" jdbcType="VARCHAR" property="commentPicUrl" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="additional_evaluation_time" jdbcType="TIMESTAMP" property="additionalEvaluationTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    commodity_comment_id, commodity_id, comment_type, comment_description, additional_evaluation, 
    comment_pic_url, del_flag, additional_evaluation_time, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.CommodityCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from COMMODITY_COMMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from COMMODITY_COMMENT
    where commodity_comment_id = #{commodityCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from COMMODITY_COMMENT
    where commodity_comment_id = #{commodityCommentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.CommodityCommentExample">
    delete from COMMODITY_COMMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newcore.electronic.commerce.base.model.generate.CommodityComment">
    insert into COMMODITY_COMMENT (commodity_comment_id, commodity_id, 
      comment_type, comment_description, additional_evaluation, 
      comment_pic_url, del_flag, additional_evaluation_time, 
      create_time, update_time)
    values (#{commodityCommentId,jdbcType=INTEGER}, #{commodityId,jdbcType=INTEGER}, 
      #{commentType,jdbcType=INTEGER}, #{commentDescription,jdbcType=VARCHAR}, #{additionalEvaluation,jdbcType=VARCHAR}, 
      #{commentPicUrl,jdbcType=VARCHAR}, #{delFlag,jdbcType=INTEGER}, #{additionalEvaluationTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.newcore.electronic.commerce.base.model.generate.CommodityComment">
    insert into COMMODITY_COMMENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commodityCommentId != null">
        commodity_comment_id,
      </if>
      <if test="commodityId != null">
        commodity_id,
      </if>
      <if test="commentType != null">
        comment_type,
      </if>
      <if test="commentDescription != null">
        comment_description,
      </if>
      <if test="additionalEvaluation != null">
        additional_evaluation,
      </if>
      <if test="commentPicUrl != null">
        comment_pic_url,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="additionalEvaluationTime != null">
        additional_evaluation_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commodityCommentId != null">
        #{commodityCommentId,jdbcType=INTEGER},
      </if>
      <if test="commodityId != null">
        #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null">
        #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentDescription != null">
        #{commentDescription,jdbcType=VARCHAR},
      </if>
      <if test="additionalEvaluation != null">
        #{additionalEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="commentPicUrl != null">
        #{commentPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="additionalEvaluationTime != null">
        #{additionalEvaluationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.CommodityCommentExample" resultType="java.lang.Integer">
    select count(*) from COMMODITY_COMMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update COMMODITY_COMMENT
    <set>
      <if test="record.commodityCommentId != null">
        commodity_comment_id = #{record.commodityCommentId,jdbcType=INTEGER},
      </if>
      <if test="record.commodityId != null">
        commodity_id = #{record.commodityId,jdbcType=INTEGER},
      </if>
      <if test="record.commentType != null">
        comment_type = #{record.commentType,jdbcType=INTEGER},
      </if>
      <if test="record.commentDescription != null">
        comment_description = #{record.commentDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.additionalEvaluation != null">
        additional_evaluation = #{record.additionalEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.commentPicUrl != null">
        comment_pic_url = #{record.commentPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.additionalEvaluationTime != null">
        additional_evaluation_time = #{record.additionalEvaluationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update COMMODITY_COMMENT
    set commodity_comment_id = #{record.commodityCommentId,jdbcType=INTEGER},
      commodity_id = #{record.commodityId,jdbcType=INTEGER},
      comment_type = #{record.commentType,jdbcType=INTEGER},
      comment_description = #{record.commentDescription,jdbcType=VARCHAR},
      additional_evaluation = #{record.additionalEvaluation,jdbcType=VARCHAR},
      comment_pic_url = #{record.commentPicUrl,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      additional_evaluation_time = #{record.additionalEvaluationTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newcore.electronic.commerce.base.model.generate.CommodityComment">
    update COMMODITY_COMMENT
    <set>
      <if test="commodityId != null">
        commodity_id = #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null">
        comment_type = #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentDescription != null">
        comment_description = #{commentDescription,jdbcType=VARCHAR},
      </if>
      <if test="additionalEvaluation != null">
        additional_evaluation = #{additionalEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="commentPicUrl != null">
        comment_pic_url = #{commentPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="additionalEvaluationTime != null">
        additional_evaluation_time = #{additionalEvaluationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where commodity_comment_id = #{commodityCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newcore.electronic.commerce.base.model.generate.CommodityComment">
    update COMMODITY_COMMENT
    set commodity_id = #{commodityId,jdbcType=INTEGER},
      comment_type = #{commentType,jdbcType=INTEGER},
      comment_description = #{commentDescription,jdbcType=VARCHAR},
      additional_evaluation = #{additionalEvaluation,jdbcType=VARCHAR},
      comment_pic_url = #{commentPicUrl,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      additional_evaluation_time = #{additionalEvaluationTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where commodity_comment_id = #{commodityCommentId,jdbcType=INTEGER}
  </update>
</mapper>