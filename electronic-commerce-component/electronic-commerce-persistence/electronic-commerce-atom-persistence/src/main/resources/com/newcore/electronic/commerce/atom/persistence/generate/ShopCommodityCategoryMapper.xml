<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newcore.electronic.commerce.atom.persistence.generate.ShopCommodityCategoryMapper">
  <resultMap id="BaseResultMap" type="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategory">
    <id column="shop_commodity_category_id" jdbcType="INTEGER" property="shopCommodityCategoryId" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="shop_category_serial" jdbcType="INTEGER" property="shopCategorySerial" />
    <result column="shop_category_name" jdbcType="VARCHAR" property="shopCategoryName" />
    <result column="shop_category_grade" jdbcType="INTEGER" property="shopCategoryGrade" />
    <result column="shop_commodity_category_parent_id" jdbcType="INTEGER" property="shopCommodityCategoryParentId" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shop_commodity_category_id, shop_id, shop_category_serial, shop_category_name, shop_category_grade, 
    shop_commodity_category_parent_id, del_flag, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SHOP_COMMODITY_CATEGORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SHOP_COMMODITY_CATEGORY
    where shop_commodity_category_id = #{shopCommodityCategoryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SHOP_COMMODITY_CATEGORY
    where shop_commodity_category_id = #{shopCommodityCategoryId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategoryExample">
    delete from SHOP_COMMODITY_CATEGORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategory">
    insert into SHOP_COMMODITY_CATEGORY (shop_commodity_category_id, shop_id, 
      shop_category_serial, shop_category_name, shop_category_grade, 
      shop_commodity_category_parent_id, del_flag, 
      create_time, update_time)
    values (#{shopCommodityCategoryId,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, 
      #{shopCategorySerial,jdbcType=INTEGER}, #{shopCategoryName,jdbcType=VARCHAR}, #{shopCategoryGrade,jdbcType=INTEGER}, 
      #{shopCommodityCategoryParentId,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategory">
    insert into SHOP_COMMODITY_CATEGORY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopCommodityCategoryId != null">
        shop_commodity_category_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopCategorySerial != null">
        shop_category_serial,
      </if>
      <if test="shopCategoryName != null">
        shop_category_name,
      </if>
      <if test="shopCategoryGrade != null">
        shop_category_grade,
      </if>
      <if test="shopCommodityCategoryParentId != null">
        shop_commodity_category_parent_id,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopCommodityCategoryId != null">
        #{shopCommodityCategoryId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopCategorySerial != null">
        #{shopCategorySerial,jdbcType=INTEGER},
      </if>
      <if test="shopCategoryName != null">
        #{shopCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="shopCategoryGrade != null">
        #{shopCategoryGrade,jdbcType=INTEGER},
      </if>
      <if test="shopCommodityCategoryParentId != null">
        #{shopCommodityCategoryParentId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategoryExample" resultType="java.lang.Integer">
    select count(*) from SHOP_COMMODITY_CATEGORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SHOP_COMMODITY_CATEGORY
    <set>
      <if test="record.shopCommodityCategoryId != null">
        shop_commodity_category_id = #{record.shopCommodityCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.shopCategorySerial != null">
        shop_category_serial = #{record.shopCategorySerial,jdbcType=INTEGER},
      </if>
      <if test="record.shopCategoryName != null">
        shop_category_name = #{record.shopCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.shopCategoryGrade != null">
        shop_category_grade = #{record.shopCategoryGrade,jdbcType=INTEGER},
      </if>
      <if test="record.shopCommodityCategoryParentId != null">
        shop_commodity_category_parent_id = #{record.shopCommodityCategoryParentId,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SHOP_COMMODITY_CATEGORY
    set shop_commodity_category_id = #{record.shopCommodityCategoryId,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      shop_category_serial = #{record.shopCategorySerial,jdbcType=INTEGER},
      shop_category_name = #{record.shopCategoryName,jdbcType=VARCHAR},
      shop_category_grade = #{record.shopCategoryGrade,jdbcType=INTEGER},
      shop_commodity_category_parent_id = #{record.shopCommodityCategoryParentId,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategory">
    update SHOP_COMMODITY_CATEGORY
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopCategorySerial != null">
        shop_category_serial = #{shopCategorySerial,jdbcType=INTEGER},
      </if>
      <if test="shopCategoryName != null">
        shop_category_name = #{shopCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="shopCategoryGrade != null">
        shop_category_grade = #{shopCategoryGrade,jdbcType=INTEGER},
      </if>
      <if test="shopCommodityCategoryParentId != null">
        shop_commodity_category_parent_id = #{shopCommodityCategoryParentId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where shop_commodity_category_id = #{shopCommodityCategoryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newcore.electronic.commerce.base.model.generate.ShopCommodityCategory">
    update SHOP_COMMODITY_CATEGORY
    set shop_id = #{shopId,jdbcType=INTEGER},
      shop_category_serial = #{shopCategorySerial,jdbcType=INTEGER},
      shop_category_name = #{shopCategoryName,jdbcType=VARCHAR},
      shop_category_grade = #{shopCategoryGrade,jdbcType=INTEGER},
      shop_commodity_category_parent_id = #{shopCommodityCategoryParentId,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where shop_commodity_category_id = #{shopCommodityCategoryId,jdbcType=INTEGER}
  </update>
</mapper>